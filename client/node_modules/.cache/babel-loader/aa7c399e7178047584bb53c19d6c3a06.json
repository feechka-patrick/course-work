{"ast":null,"code":"export function calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n\n  return null;\n}\n\nvar concat = function (a, b, c, board) {\n  var result = board[a] + arr[b] + arr[c];\n\n  if (result === \"xxx\" || result === \"ooo\") {\n    return result;\n  }\n\n  switch (result) {\n    case \"xxnull\":\n      return [\"x\", c];\n\n    case \"xnullx\":\n      return [\"x\", b];\n\n    case \"nullxx\":\n      return [\"x\", a];\n\n    case \"oonull\":\n      return [\"o\", c];\n\n    case \"onullo\":\n      return [\"o\", b];\n\n    case \"nulloo\":\n      return [\"o\", a];\n  }\n};\n\nexport function getNextStep(board) {\n  for (let i = 0; i < 9; i++) {\n    const [a, b, c] = lines[i];\n\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n}","map":{"version":3,"sources":["/home/nmisfit/Desktop/course-work/client/src/pages/GameUtils.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","concat","board","result","arr","getNextStep"],"mappings":"AAAA,OAAO,SAASA,eAAT,CAAyBC,OAAzB,EAAkC;AACxC,QAAMC,KAAK,GAAG,CACb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CADa,EAEb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAFa,EAGb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAHa,EAIb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAJa,EAKb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CALa,EAMb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CANa,EAOb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CAPa,EAQb,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,CARa,CAAd;;AAUA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACtC,UAAM,CAACE,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYL,KAAK,CAACC,CAAD,CAAvB;;AACA,QAAIF,OAAO,CAACI,CAAD,CAAP,IAAcJ,OAAO,CAACI,CAAD,CAAP,KAAeJ,OAAO,CAACK,CAAD,CAApC,IAA2CL,OAAO,CAACI,CAAD,CAAP,KAAeJ,OAAO,CAACM,CAAD,CAArE,EAA0E;AACzE,aAAON,OAAO,CAACI,CAAD,CAAd;AACA;AACD;;AACD,SAAO,IAAP;AACA;;AAED,IAAIG,MAAM,GAAG,UAASH,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBE,KAAlB,EAAwB;AACpC,MAAIC,MAAM,GAAGD,KAAK,CAACJ,CAAD,CAAL,GAAWM,GAAG,CAACL,CAAD,CAAd,GAAoBK,GAAG,CAACJ,CAAD,CAApC;;AAEA,MAAIG,MAAM,KAAK,KAAX,IAAoBA,MAAM,KAAK,KAAnC,EAAyC;AACxC,WAAOA,MAAP;AACA;;AAED,UAAQA,MAAR;AACC,SAAK,QAAL;AACC,aAAO,CAAC,GAAD,EAAMH,CAAN,CAAP;;AAED,SAAK,QAAL;AACC,aAAO,CAAC,GAAD,EAAMD,CAAN,CAAP;;AAED,SAAK,QAAL;AACC,aAAO,CAAC,GAAD,EAAMD,CAAN,CAAP;;AAED,SAAK,QAAL;AACC,aAAO,CAAC,GAAD,EAAME,CAAN,CAAP;;AAED,SAAK,QAAL;AACC,aAAO,CAAC,GAAD,EAAMD,CAAN,CAAP;;AAED,SAAK,QAAL;AACC,aAAO,CAAC,GAAD,EAAMD,CAAN,CAAP;AAjBF;AAmBA,CA1BD;;AA4BA,OAAO,SAASO,WAAT,CAAqBH,KAArB,EAA2B;AAC9B,OAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC9B,UAAM,CAACE,CAAD,EAAIC,CAAJ,EAAOC,CAAP,IAAYL,KAAK,CAACC,CAAD,CAAvB;;AACA,QAAIF,OAAO,CAACI,CAAD,CAAP,IAAcJ,OAAO,CAACI,CAAD,CAAP,KAAeJ,OAAO,CAACK,CAAD,CAApC,IAA2CL,OAAO,CAACI,CAAD,CAAP,KAAeJ,OAAO,CAACM,CAAD,CAArE,EAA0E;AACzE,aAAON,OAAO,CAACI,CAAD,CAAd;AACA;AACD;AACD","sourcesContent":["export function calculateWinner(squares) {\n\tconst lines = [\n\t\t[0, 1, 2],\n\t\t[3, 4, 5],\n\t\t[6, 7, 8],\n\t\t[0, 3, 6],\n\t\t[1, 4, 7],\n\t\t[2, 5, 8],\n\t\t[0, 4, 8],\n\t\t[2, 4, 6],\n\t]\n\tfor (let i = 0; i < lines.length; i++) {\n\t\tconst [a, b, c] = lines[i]\n\t\tif (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n\t\t\treturn squares[a]\n\t\t}\n\t}\n\treturn null\n}\n\nvar concat = function(a, b, c, board){\n\tvar result = board[a] + arr[b] + arr[c] \n\t\n\tif (result === \"xxx\" || result === \"ooo\"){\n\t\treturn result\n\t}\n\t\n\tswitch (result){\n\t\tcase \"xxnull\":\n\t\t\treturn [\"x\", c]\n\t\t\t\n\t\tcase \"xnullx\":\n\t\t\treturn [\"x\", b]\n\t\t\t\n\t\tcase \"nullxx\":\n\t\t\treturn [\"x\", a]\n\t\t\t\n\t\tcase \"oonull\":\n\t\t\treturn [\"o\", c]\n\t\t\t\n\t\tcase \"onullo\":\n\t\t\treturn [\"o\", b]\n\t\t\t\n\t\tcase \"nulloo\":\n\t\t\treturn [\"o\", a]\n\t}\n}\n\nexport function getNextStep(board){\n    for (let i = 0; i < 9; i++) {\n\t\tconst [a, b, c] = lines[i]\n\t\tif (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n\t\t\treturn squares[a]\n\t\t}\n\t}\n}"]},"metadata":{},"sourceType":"module"}