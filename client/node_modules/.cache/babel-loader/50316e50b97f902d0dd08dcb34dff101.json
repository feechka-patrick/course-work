{"ast":null,"code":"var _jsxFileName = \"/home/nmisfit/Desktop/course-work/client/src/components/AppRouter.js\";\nimport React from 'react';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport { authRoutes, publicRoutes } from '../routes';\nimport { LOGIN_ROUTE, MAIN_ROUTE } from '../utils/consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRouter = () => {\n  const isAuth = false;\n  return /*#__PURE__*/_jsxDEV(Switch, {\n    children: [isAuth && authRoutes.map(_ref => {\n      let {\n        path,\n        Component\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        component: Component,\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this);\n    }), publicRoutes.map(_ref2 => {\n      let {\n        path,\n        Component\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Route, {\n        path: path,\n        component: Component,\n        exact: true\n      }, path, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Redirect, {\n      to: LOGIN_ROUTE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AppRouter;\nexport default AppRouter;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouter\");","map":{"version":3,"sources":["/home/nmisfit/Desktop/course-work/client/src/components/AppRouter.js"],"names":["React","Switch","Route","Redirect","authRoutes","publicRoutes","LOGIN_ROUTE","MAIN_ROUTE","AppRouter","isAuth","map","path","Component"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,QAAvB,QAAsC,kBAAtC;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,WAAzC;AACA,SAASC,WAAT,EAAsBC,UAAtB,QAAwC,iBAAxC;;;AACA,MAAMC,SAAS,GAAG,MAAM;AACpB,QAAMC,MAAM,GAAG,KAAf;AACF,sBACE,QAAC,MAAD;AAAA,eACKA,MAAM,IAAIL,UAAU,CAACM,GAAX,CAAe;AAAA,UAAC;AAACC,QAAAA,IAAD;AAAOC,QAAAA;AAAP,OAAD;AAAA,0BACtB,QAAC,KAAD;AAAkB,QAAA,IAAI,EAAED,IAAxB;AAA8B,QAAA,SAAS,EAAEC,SAAzC;AAAoD,QAAA,KAAK;AAAzD,SAAYD,IAAZ;AAAA;AAAA;AAAA;AAAA,cADsB;AAAA,KAAf,CADf,EAIKN,YAAY,CAACK,GAAb,CAAiB;AAAA,UAAC;AAACC,QAAAA,IAAD;AAAOC,QAAAA;AAAP,OAAD;AAAA,0BACd,QAAC,KAAD;AAAkB,QAAA,IAAI,EAAED,IAAxB;AAA8B,QAAA,SAAS,EAAEC,SAAzC;AAAoD,QAAA,KAAK;AAAzD,SAAYD,IAAZ;AAAA;AAAA;AAAA;AAAA,cADc;AAAA,KAAjB,CAJL,eAOI,QAAC,QAAD;AAAU,MAAA,EAAE,EAAEL;AAAd;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CAbD;;KAAME,S;AAeN,eAAeA,SAAf","sourcesContent":["import React from 'react';\nimport {Switch, Route, Redirect} from 'react-router-dom'\nimport { authRoutes, publicRoutes } from '../routes';\nimport { LOGIN_ROUTE, MAIN_ROUTE } from '../utils/consts';\nconst AppRouter = () => {\n    const isAuth = false;\n  return (\n    <Switch>\n        {isAuth && authRoutes.map(({path, Component}) =>\n            <Route key={path} path={path} component={Component} exact/>\n        )}\n        {publicRoutes.map(({path, Component}) =>\n            <Route key={path} path={path} component={Component} exact/>\n        )}\n        <Redirect to={LOGIN_ROUTE}/>\n    </Switch>\n  );\n}\n\nexport default AppRouter;\n"]},"metadata":{},"sourceType":"module"}